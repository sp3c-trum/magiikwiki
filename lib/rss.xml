<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Magikopedia]]></title><description><![CDATA[Obsidian digital garden]]></description><link>http://github.com/dylang/node-rss</link><image><url>lib\media\favicon.png</url><title>Magikopedia</title><link/></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Tue, 07 Jan 2025 22:46:30 GMT</lastBuildDate><atom:link href="lib\rss.xml" rel="self" type="application/rss+xml"/><pubDate>Tue, 07 Jan 2025 22:46:27 GMT</pubDate><copyright><![CDATA[Mag Magik II]]></copyright><ttl>60</ttl><dc:creator>Mag Magik II</dc:creator><item><title><![CDATA[Sortowanie przez wybieranie]]></title><description><![CDATA[<a class="tag" href="?query=tag:sortowanie" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#sortowanie</a> <a class="tag" href="?query=tag:On2" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#On2</a> 
 <br><a href=".?query=tag:sortowanie" class="tag" target="_blank" rel="noopener nofollow">#sortowanie</a> <a href=".?query=tag:On2" class="tag" target="_blank" rel="noopener nofollow">#On2</a> <br><br>Wydajność algorytmu: <br>
Sortowanie przez wybieranie pozwala na posortowanie listy w określonej kategorii. Polega na szukaniu największego elementu listy, dodanie go do nowej listy i powtarzanie procesu dopóki z oryginalnej listy nie zostanie żaden element do posortowania.<br><br>int? sort()
{

}
]]></description><link>algorithms\na-listach-dowolnych\sortowanie-przez-wybieranie.html</link><guid isPermaLink="false">Algorithms/Na listach dowolnych/Sortowanie przez wybieranie.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Tue, 07 Jan 2025 18:17:38 GMT</pubDate></item><item><title><![CDATA[Algorytmy]]></title><description><![CDATA[ 
 <br><br>Algorytm to zestaw instrukcji opisujących jak wykonać pewne zadanie. Wydajność danego algorytmu można przedstawić za pomocą <a data-tooltip-position="top" aria-label="Notacja dużego O" data-href="Notacja dużego O" href="matematyka\notacja-dużego-o.html" class="internal-link" target="_self" rel="noopener nofollow">notacją dużego O</a>.<br><br>
<br><a data-href="Wyszukiwanie binarne" href="algorithms\na-listach-posortowanych\wyszukiwanie-binarne.html" class="internal-link" target="_self" rel="noopener nofollow">Wyszukiwanie binarne</a>
<br><br>
<br><a data-href="Sortowanie przez wybieranie" href="algorithms\na-listach-dowolnych\sortowanie-przez-wybieranie.html" class="internal-link" target="_self" rel="noopener nofollow">Sortowanie przez wybieranie</a>
]]></description><link>algorithms\algorytmy.html</link><guid isPermaLink="false">Algorithms/Algorytmy.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Tue, 07 Jan 2025 18:35:34 GMT</pubDate></item><item><title><![CDATA[Notacja dużego O]]></title><description><![CDATA[ 
 <br><br>Notacja dużego O to sposób określania wydajności algorytmu w czasie. Notacja dużego O określa w przybliżeniu liczbę operacji, jakie wykonuje algorytm. Notacja ta wygląda w następujący sposób:<br><br>Gdzie  jest funkcją zależną od wielkości wejścia . <br>Przykłady:<br>
<br>: stała złożoność, np. dostęp do elementu w tablicy.
<br>: logarytmiczna złożoność, np. wyszukiwanie binarne. 
<br>: liniowa złożoność, np. jednorazowe przejście przez liste.
<br>Warto zaznaczyć również że notacja dużego O przedstawia górne ograniczenie złożoności w algorytmie, czyli jego zachowanie w najgorszym możliwym przypadku. Algorytm o złożoności  może w różnych przypadkach zachowywać się jak algorytm o złożoności , dopóki nie przekroczy górnego ograniczenia złożoności.<br>Również warte uwagi jest to że w notacji dużego O ignoruje się stałe, dlatego zamiast np.  zapisujemy  czyli .]]></description><link>matematyka\notacja-dużego-o.html</link><guid isPermaLink="false">Matematyka/Notacja dużego O.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Tue, 07 Jan 2025 18:20:18 GMT</pubDate></item><item><title><![CDATA[Procesy]]></title><description><![CDATA[ 
 <br><br>Proces to w ogólnym pojęciu wykonujący się program. Z każdym procesem jest związana jego <a data-tooltip-position="top" aria-label="Przestrzeń adresowa" data-href="Przestrzeń adresowa" href="os\concepts\procesy\przestrzeń-adresowa.html" class="internal-link" target="_self" rel="noopener nofollow">przestrzeń adresowa</a>. Proces może być kojarzony jako kontener zawierający wszystkie informacje niezbędne do uruchomienia programu. <br><br><a data-href="Procesor CPU" href="os\hardware\procesor-cpu.html" class="internal-link" target="_self" rel="noopener nofollow">Procesor CPU</a> może stwierdzić że proces w ciągu ostatnich kilku sekund zużył znacznie więcej, niż wynosi jego kwant czasu procesora, więc go zatrzyma i rozpocznie działanie innego. Kiedy proces zostanie wstrzymany, wszystkie jego informacje oraz <a data-tooltip-position="top" aria-label="Wskaźnik" data-href="Wskaźnik" href="programming\ogólne-koncepty\jednostki-pamięci-&amp;-pamięć\wskaźnik.html" class="internal-link" target="_self" rel="noopener nofollow">wskaźniki</a> mówiące z jakich danych/plików korzysta dany proces są zapisywane w tabeli systemu operacyjnego nazywanej <a data-tooltip-position="top" aria-label="Tabela procesów" data-href="Tabela procesów" href="os\concepts\procesy\tabela-procesów.html" class="internal-link" target="_self" rel="noopener nofollow">tabelą procesów</a>.<br>Proces może utworzyć jeden lub kilka innych procesów (procesy potomne), zaś te procesy mogą tworzyć dalej swoje podprocesy, tworząc drzewo procesów. Powiązane procesy mogą wymieniać się działaniem i informacjami między sobą, co nazywane jest <a data-tooltip-position="top" aria-label="Komunikacja międzyprocesowa" data-href="Komunikacja międzyprocesowa" href="os\concepts\procesy\komunikacja-międzyprocesowa.html" class="internal-link" target="_self" rel="noopener nofollow">komunikacją międzyprocesową</a>.<br>Każdy uruchomiony proces posiada identyfikator <a data-href="UID" href="os\concepts\procesy\uid.html" class="internal-link" target="_self" rel="noopener nofollow">UID</a> użytkownika który zlecił utworzenie danego procesu. W systemach <a data-href="UNIX" href="os\systemy\unix.html" class="internal-link" target="_self" rel="noopener nofollow">UNIX</a> każdy podproces w drzewie procesów ma ten sam UID. Identyfikator administratora systemu posiada specjalne prawa i może naruszać wiele reguł zabezpieczeń.<br><br>Proces składa się z czterech głównych segmentów, ustawione są w pamięci w ten sposób:<br>
<br>Stos
<br>Luka
<br>Dane
<br>Tekst
<br>Segment danch przechowuje zmienne, <a data-tooltip-position="top" aria-label="Stos" data-href="Stos" href="programming\ogólne-koncepty\stos.html" class="internal-link" target="_self" rel="noopener nofollow">segment stosu</a> przechowuje stos wywołań systemowych, a segment tekstu przechowuje kod programu. Segment danych rośnie w góre, segment stosu natomiast rośnie w dół, a pomiędzy nimi jest luka nieużywanej przestrzeni adresowej. Stos wzrasta w sposób automatyczny, natomiast zwiększenie stosu danych wymaga wywołania systemowegobrk. Wywołanie to jednak nie mieści się w standardzie POSIX, więc programistom zaleca się jednak wykorzystanie procedury bibliotecznej malloc do dynamicznego zarządzania pamięcią (łatwiejsze i nie trzeba się kłócić o pamięć z systemem).]]></description><link>os\concepts\procesy\procesy.html</link><guid isPermaLink="false">OS/Concepts/Procesy/Procesy.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Tue, 07 Jan 2025 18:42:02 GMT</pubDate></item><item><title><![CDATA[Partycja]]></title><description><![CDATA[ 
 <br>]]></description><link>os\concepts\system-plików\partycja.html</link><guid isPermaLink="false">OS/Concepts/System plików/Partycja.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Sat, 28 Dec 2024 14:40:39 GMT</pubDate></item><item><title><![CDATA[System plików]]></title><description><![CDATA[ 
 <br>]]></description><link>os\concepts\system-plików\system-plików.html</link><guid isPermaLink="false">OS/Concepts/System plików/System plików.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Sat, 28 Dec 2024 14:40:39 GMT</pubDate></item><item><title><![CDATA[Procesor CPU]]></title><description><![CDATA[<a class="tag" href="?query=tag:asdf" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#asdf</a> <a class="tag" href="?query=tag:Programowanie" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Programowanie</a> 
 <br><a href=".?query=tag:asdf" class="tag" target="_blank" rel="noopener nofollow">#asdf</a> <a href=".?query=tag:Programowanie" class="tag" target="_blank" rel="noopener nofollow">#Programowanie</a><br><br>Procesor (ang. central processing unit, CPU) – podstawowy element jednostki centralnej komputera odpowiedzialny za wykonywanie <a data-tooltip-position="top" aria-label="Instrukcje programowe" data-href="Instrukcje programowe" href="programming\assembly\instrukcje-programowe.html" class="internal-link" target="_self" rel="noopener nofollow">instrukcji programów</a>. Procesor wykonuje obliczenia, zarządza danymi oraz steruje działaniem innych komponentów systemu używając połączeń z <a data-tooltip-position="top" aria-label="Magistrala" data-href="Magistrala" href="os\hardware\magistrala.html" class="internal-link" target="_self" rel="noopener nofollow">magistralami</a>. <br><br>Cykl każdego procesora polega na:<br>
<br>Pobraniu instrukcji z pamięci
<br>Zdekodowaniu jej
<br>Określeniu jej typu i operandów
<br>Uruchomieniu danej instrukcji
<br>Zapisaniu wyników w rejestrach lub pamięci
<br>Po czym cykl się powtarza dla każdej następnej instrukcji w pamięci aż do zakończenia działania programu. W celu optymalizacji standardowy model jednowątkowego pobierania instrukcji został zastąpiony tak zwanym potokiem bądź procesorem superskalarnym, w których jest pobieranych i wykonywanych wiele instrukcji w tym samym czasie.<br><br><br><br>Rejestry służa do szybkiego i wydajnego przechowywania wartości najważnieszych zmiennych i tymczasowych wyników. Procesor może w nich szybko zapisywać oraz odczytywać dane za pomocą instrukcji aby później móc je wykorzystać bądź zapisać permamentnie w pamięci. Wyróżnia się kilka wyjątkowych rejestrów:<br><br>Zawiera adres pamieci następnej instrukcji do pobrania.<br><br>Wskazuje wierzchołek bieżącego <a data-tooltip-position="top" aria-label="Stos" data-href="Stos" href="programming\ogólne-koncepty\stos.html" class="internal-link" target="_self" rel="noopener nofollow">stosu w pamięci</a>. Stos zawiera po jednej ramce dla każdej procedury, której wykonywanie się rozpoczęło, ale jeszcze nie zakończyło.<br><br>Ten rejestr zawiera bity kodu warunku ustawiane przez funkcje porównań, priorytet procesora, <a data-tooltip-position="top" aria-label="Tryby wykonywania" data-href="Tryby wykonywania" href="os\concepts\tryby-wykonywania.html" class="internal-link" target="_self" rel="noopener nofollow">tryb użytkownika lub jądra</a> oraz różne inne bity kontrolne. Programy użytkownika mogą standardowo czytać cały rejestr PSW.<br><br>Pamięć podręczna służy do szybkiego przetwarzania i zapisywania tymczasowych <a data-tooltip-position="top" aria-label="Jednostki pamięci > ^cab4e0" data-href="Jednostki pamięci#^cab4e0" href="programming\ogólne-koncepty\jednostki-pamięci-&amp;-pamięć\jednostki-pamięci.html#^cab4e0" class="internal-link" target="_self" rel="noopener nofollow">danych/słów</a> bez zapisywania danych do <a data-tooltip-position="top" aria-label="Pamięć RAM" data-href="Pamięć RAM" href="os\hardware\pamięć-ram.html" class="internal-link" target="_self" rel="noopener nofollow">pamięci RAM</a> lub trwałej (co wykorzystuje drastycznie więcej cyklów procesora). <br>Wyróżnia się kilka rodzajów pamięci podecznej:<br>
L1 - Pamięć znajdująca się w samym procesorze<br>
Zawiera kilka do kilkudziesiędziu kilobajtów<br>
Nie wymaga żadnych cyklów procesora aby jej użyć<br>L2 - Pamięć znajdująca się dalej od procesora<br>
Zawiera nawet do kilku megabajtów<br>
Wymaga od jednego do dwóch cyklów procesora do użycia<br>
Może być to pamięć dedykowana dla każdego rdzenia, lub współdzielona dla kilku rdzeni.<br>Pamięc podręczna jest podzielona na linie pamięci podręcznej (cache lines), zazwyczaj o pojemności 64 bajtów. Użycie pamięci podręcznej polega na sprawdzeniu poprzez procesor pamięci podręcznej czy potrzebne dane bądź miejsce są dostępne w najbliższej linii pamięci (hit). Jeśli tak się nie dzieje (miss) procesor szuka w wyższch poziomach pamięci. W przyapdku braku danych/pamięci w każdej pamięci cache, procesor odwołuje się do pamięci RAM. Pamięć L2 może również służyć do buforowania danych do wysłania do pamięci RAM oszczędzając cykle procesora w porównaniu do wysyłania danych prosto do pamięci RAM.<br><br>Część procesora odpowiedzialna za zarządzanie pamięcią fizyczną oraz wirtualną, mapowanim adresów pamięci w locie oraz zarządzaniem <a data-tooltip-position="top" aria-label="Przestrzeń adresowa" data-href="Przestrzeń adresowa" href="os\concepts\procesy\przestrzeń-adresowa.html" class="internal-link" target="_self" rel="noopener nofollow">przestrzenią adresową</a> procesów.<br>]]></description><link>os\hardware\procesor-cpu.html</link><guid isPermaLink="false">OS/Hardware/Procesor CPU.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Tue, 07 Jan 2025 18:34:30 GMT</pubDate></item><item><title><![CDATA[WORDs]]></title><description><![CDATA[ 
 <br><br><br>]]></description><link>programming\ogólne-koncepty\jednostki-pamięci-&amp;-pamięć\jednostki-pamięci.html</link><guid isPermaLink="false">Programming/Ogólne koncepty/Jednostki pamięci &amp; pamięć/Jednostki pamięci.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Tue, 07 Jan 2025 17:44:55 GMT</pubDate></item><item><title><![CDATA[Lista powiązana]]></title><description><![CDATA[<a class="tag" href="?query=tag:typ-złożony" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#typ-złożony</a> <a class="tag" href="?query=tag:zmienna" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#zmienna</a> 
 <br><a href=".?query=tag:typ-złożony" class="tag" target="_blank" rel="noopener nofollow">#typ-złożony</a> <a href=".?query=tag:zmienna" class="tag" target="_blank" rel="noopener nofollow">#zmienna</a><br><br>Lista powiązana to rodzaj listy który przechowuje każdy element listy w losowo wybranych komórkach pamięci. Każdy element przechowuje dane, oraz <a data-tooltip-position="top" aria-label="Wskaźnik" data-href="Wskaźnik" href="programming\ogólne-koncepty\jednostki-pamięci-&amp;-pamięć\wskaźnik.html" class="internal-link" target="_self" rel="noopener nofollow">wskaźnik</a> do następnego elementu listy. Elementy listy powiązanej nigdy nie są przenoszone<br><br>Dodanie elementu do listy powiązanej polega wybraniu losowego wolnego miejsca w pamięci, zapisaniu w nim danych oraz zapisanie w poprzednim elemencie wskaźnik do następnego elementu tablicy.<br><img alt="Pasted image 20250107190442.png" src="lib\media\pasted-image-20250107190442.png"><br>
1.Działanie listy powiązanej<br><br>Listy powiązane sprawdzają się najlepiej kiedy z góry wiadomo że będzie trzeba przeszukać każdy element listy, ponieważ nie da się jej sprawdzać nieregularnie (ponieważ nie wiadomo gdzie który element listy się znajduje dopóki nie odczytasz każdego poprzedniego elementu listy). Rozwiązaniem tego problemu jest wykorzystanie <a data-tooltip-position="top" aria-label="Tablica" data-href="Tablica" href="programming\ogólne-koncepty\jednostki-pamięci-&amp;-pamięć\tablica.html" class="internal-link" target="_self" rel="noopener nofollow">tablicy</a>.]]></description><link>programming\ogólne-koncepty\jednostki-pamięci-&amp;-pamięć\lista-powiązana.html</link><guid isPermaLink="false">Programming/Ogólne koncepty/Jednostki pamięci &amp; pamięć/Lista powiązana.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Tue, 07 Jan 2025 22:46:11 GMT</pubDate><enclosure url="lib\media\pasted-image-20250107190442.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="lib\media\pasted-image-20250107190442.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Tablica]]></title><description><![CDATA[<a class="tag" href="?query=tag:typ-złożony" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#typ-złożony</a> 
 <br><a href=".?query=tag:typ-złożony" class="tag" target="_blank" rel="noopener nofollow">#typ-złożony</a> <br><br>Tablica to złożony typ danych który przechowuje kilka elementów w jednej zmiennej. Tablica ma z góry określony rozmiar i wszystkie w nim elementy są ułożone po kolei. Wszystkie elementy w tablicy powinny być tego samego typu.<br><br>Stworzenie tablicy polega na zarezerwowaniu w pamięci adresów potrzebnych do przechowania wszystkich jej ewentualnych elementów. Następnie aby dodać nowy element do tablicy jest on dodawany w następne wolne miejsce.<br>
<img alt="Pasted image 20250107233730.png" src="lib\media\pasted-image-20250107233730.png"><br>]]></description><link>programming\ogólne-koncepty\jednostki-pamięci-&amp;-pamięć\tablica.html</link><guid isPermaLink="false">Programming/Ogólne koncepty/Jednostki pamięci &amp; pamięć/Tablica.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Tue, 07 Jan 2025 22:44:19 GMT</pubDate><enclosure url="lib\media\pasted-image-20250107233730.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="lib\media\pasted-image-20250107233730.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Wskaźnik]]></title><description><![CDATA[<a class="tag" href="?query=tag:zmienna" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#zmienna</a> <a class="tag" href="?query=tag:pamięć" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#pamięć</a> 
 <br><a href=".?query=tag:zmienna" class="tag" target="_blank" rel="noopener nofollow">#zmienna</a> <a href=".?query=tag:pamięć" class="tag" target="_blank" rel="noopener nofollow">#pamięć</a><br><br>Wskaźnik to rodzaj zmiennej która przechowuje <a data-tooltip-position="top" aria-label="Pamięć RAM" data-href="Pamięć RAM" href="os\hardware\pamięć-ram.html" class="internal-link" target="_self" rel="noopener nofollow">adres pamięciowy</a>]]></description><link>programming\ogólne-koncepty\jednostki-pamięci-&amp;-pamięć\wskaźnik.html</link><guid isPermaLink="false">Programming/Ogólne koncepty/Jednostki pamięci &amp; pamięć/Wskaźnik.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Tue, 07 Jan 2025 18:37:17 GMT</pubDate></item><item><title><![CDATA[Index]]></title><description><![CDATA[ 
 <br>magikopedia, suko<br>
Zbiór wiedzy zebranej o tematach należących do Computer Science. I wiele innych w sumie.<br><br>
<br>Programowanie w C#
<br>Podstawy działania systemów operacyjnych
<br>Algorytmy
<br>Matematyka dyskretna
<br>Programowanie w assembly
<br>Systemy operacyjny (głębiej)
<br>Działania kompilatorów i linkerów
<br><br>Do stworzenia projektu wykorzystując wiedzę teoretyczną potrzebne jest:<br>
<br>Programowania w C
<br>Programowania w assembler
<br>Teoria systemów operacyjnych (książka)
<br>Podstawy działania kompilatorów (assembler, linker, make utility)
<br>Użytkowanie systemów UNIX (standardy POSIX)
<br>Emulatory i wirtualizacja
<br>Działanie procesorów na które programujesz
<br>Zarządzanie pamięcią
<br>Generowanie plików wykonywalnych dla kernela
]]></description><link>index.html</link><guid isPermaLink="false">Index.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Sat, 28 Dec 2024 16:37:57 GMT</pubDate></item><item><title><![CDATA[Link]]></title><description><![CDATA[ 
 <br><br>Procesor, znany również jako jednostka centralna (ang. Central Processing Unit, CPU), jest jednym z najważniejszych komponentów każdego komputera. Odpowiada za wykonywanie obliczeń oraz realizację instrukcji zawartych w programach. Współczesne procesory charakteryzują się ogromną mocą obliczeniową, miniaturowymi wymiarami oraz zaawansowaną architekturą.<br>
<img alt="Pasted image 20241228172455.png" src="_images\pasted-image-20241228172455.png">]]></description><link>link.html</link><guid isPermaLink="false">Link.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Sun, 05 Jan 2025 23:08:32 GMT</pubDate><enclosure url="_images\pasted-image-20241228172455.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="_images\pasted-image-20241228172455.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Untitled]]></title><description><![CDATA[ 
 Pamięć przydzielona tablicy<br>Element 1<br>Element 5<br>Pusty element tablicy<br>Element 3<br>Element 4<br>Pusta komórka pamięci<br>Pusta komórka pamięci<br>Pusta komórka pamięci<br>Tablica<br>Pusta komórka pamięci<br>Pusta komórka pamięci<br>Pusta komórka pamięci<br>Pusty element tablicy]]></description><link>untitled.html</link><guid isPermaLink="false">Untitled.canvas</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Tue, 07 Jan 2025 22:37:19 GMT</pubDate></item><item><title><![CDATA[Wywołania systemowe]]></title><description><![CDATA[ 
 <br>]]></description><link>wywołania-systemowe.html</link><guid isPermaLink="false">Wywołania systemowe.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Sun, 05 Jan 2025 23:08:46 GMT</pubDate></item><item><title><![CDATA[Komunikacja międzyprocesowa]]></title><description><![CDATA[ 
 <br>]]></description><link>os\concepts\procesy\komunikacja-międzyprocesowa.html</link><guid isPermaLink="false">OS/Concepts/Procesy/Komunikacja międzyprocesowa.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Fri, 27 Dec 2024 12:02:07 GMT</pubDate></item><item><title><![CDATA[Przerwania]]></title><description><![CDATA[ 
 <br><br>Przerwania to jeden z najbardziej podstawowych mechanizmów interakcji procesora z systemem operacyjnym. Dzięki przerwaniom procesor może reagować na zdarzenia w sposób natychmiastowy, bez konieczności ciągłego sprawdzania stanów urządzeń (polling).<br><br>
<br>Zgłoszenie przerwania
<br>Zapis stanu procesora
<br>Obsługa przerwania
<br>Powrót do wykonywanej pracy
<br><br>Sprzętowe - Generowane przez urządzenia I/O, najczęściej asynchroniczne.<br>
Programowe - Wywoływane przez instrukcje programowe, do realizacji <a data-tooltip-position="top" aria-label="Wywołania systemowe" data-href="Wywołania systemowe" href="Wywołania systemowe" class="internal-link" target="_self" rel="noopener nofollow">wywołań sysytemowych</a>.<br>
Wyjątki - Służace do obsługi błędów.]]></description><link>os\concepts\procesy\przerwania.html</link><guid isPermaLink="false">OS/Concepts/Procesy/Przerwania.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Sat, 28 Dec 2024 12:28:45 GMT</pubDate></item><item><title><![CDATA[Tabela procesów]]></title><description><![CDATA[ 
 <br><br>Procesor wykorzystuje tabelę procesów aby przetrzymywać wszystkie wskaźniki i informacje procesu potrzebne do wznowienia przerwanego procesu. ]]></description><link>os\concepts\procesy\tabela-procesów.html</link><guid isPermaLink="false">OS/Concepts/Procesy/Tabela procesów.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Fri, 27 Dec 2024 12:03:12 GMT</pubDate></item><item><title><![CDATA[UID]]></title><description><![CDATA[ 
 <br><br>UID (User ID) to numeryczny identyfikator użytkownika w systemie operacyjnym UNIX.]]></description><link>os\concepts\procesy\uid.html</link><guid isPermaLink="false">OS/Concepts/Procesy/UID.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Fri, 27 Dec 2024 12:04:21 GMT</pubDate></item><item><title><![CDATA[Pliki]]></title><description><![CDATA[ 
 <br>]]></description><link>os\concepts\system-plików\pliki.html</link><guid isPermaLink="false">OS/Concepts/System plików/Pliki.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Sat, 28 Dec 2024 00:34:12 GMT</pubDate></item><item><title><![CDATA[Dyski]]></title><description><![CDATA[ 
 <br><br>Dyski to urządzenia pamięci masowej służące do trwałego przechowywania <a data-tooltip-position="top" aria-label="Pliki" data-href="Pliki" href="os\concepts\system-plików\pliki.html" class="internal-link" target="_self" rel="noopener nofollow">plików</a>. Dyski mogą posiadać wiele <a data-tooltip-position="top" aria-label="Partycja" data-href="Partycja" href="os\concepts\system-plików\partycja.html" class="internal-link" target="_self" rel="noopener nofollow">partycji</a>, a każda z nich może posiadać osobny <a data-tooltip-position="top" aria-label="System plików" data-href="System plików" href="os\concepts\system-plików\system-plików.html" class="internal-link" target="_self" rel="noopener nofollow">system plików</a>. W przeciwieństwie do pamięci głównej komputera prędkości przesyłu plików są o wiele mniejsze, jednak mogą one zachować pliki na długie lata. Interakcje pomiędzy dyskiem a systemem operacyjnym są obsługiwane poprzez <a data-tooltip-position="top" aria-label="Kontroler dysku" data-href="Kontroler dysku" href="os\hardware\kontroler-dysku.html" class="internal-link" target="_self" rel="noopener nofollow">kontroler dysku</a>.<br><br>Dyski HDD to dyski składające się z fizycznych talerzy magnetycznych i głowic odczytująco-zapisujących. Dane są zapisywane magnetycznie na powierzchni talerzy. Posiadają one dużą pojemność w stosunku do ceny oraz długowieczność danych, jednak są one znacznie wolniejsze od innych dysków i generują hałas oraz ciepło.<br><br>Dyski SSD to dyski opierające się na technologii półprzewodnikowej nie polegającej na żadnych fizycznych częściach. Dane przechowywane są w pamięci NAND Flash. Posiadają one bardzo szybki zapis oraz odczyt danych, jednak posiadają one ograniczoną ilość cykli zapisów w porównaniu do dysków HDD. Są one również znacznie droższe.<br><br>Dyski NVMe to dyski opierające się na tym samym co dyski SSD, korzystają jednak z <a data-tooltip-position="top" aria-label="Magistrala" data-href="Magistrala" href="os\hardware\magistrala.html" class="internal-link" target="_self" rel="noopener nofollow">magistrali</a> PCIe zamiast SATA, przez co posiadają jeszcze większą szybkość i niske opóźnienia, wymagają jednak płyty głównej kompatybilnej z tym standardem.]]></description><link>os\hardware\dyski.html</link><guid isPermaLink="false">OS/Hardware/Dyski.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Fri, 27 Dec 2024 12:28:25 GMT</pubDate></item><item><title><![CDATA[Kontroler dysku]]></title><description><![CDATA[ 
 <br>]]></description><link>os\hardware\kontroler-dysku.html</link><guid isPermaLink="false">OS/Hardware/Kontroler dysku.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Sat, 28 Dec 2024 00:34:25 GMT</pubDate></item><item><title><![CDATA[Pamięć RAM]]></title><description><![CDATA[ 
 <br><br>Pamięc główna RAM (random-access memory) służy do obsługi wszystkich żądań procesora które nie mogły zostać obsłużone poprzez <a data-tooltip-position="top" aria-label="Procesor CPU > ^PamiecPodreczna" data-href="Procesor CPU#^PamiecPodreczna" href="os\hardware\procesor-cpu.html#^PamiecPodreczna" class="internal-link" target="_self" rel="noopener nofollow">pamięć podręczną</a>. Składa się zazwyczaj z kilku gigabajtów pamięci o wysokiej wydajności odczytu oraz zapisu. <br>]]></description><link>os\hardware\pamięć-ram.html</link><guid isPermaLink="false">OS/Hardware/Pamięć RAM.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Sat, 28 Dec 2024 12:46:46 GMT</pubDate></item><item><title><![CDATA[Procesor GPU]]></title><description><![CDATA[ 
 <br>]]></description><link>os\hardware\procesor-gpu.html</link><guid isPermaLink="false">OS/Hardware/Procesor GPU.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Sat, 28 Dec 2024 12:29:43 GMT</pubDate></item><item><title><![CDATA[BIOS]]></title><description><![CDATA[ 
 <br><br>BIOS (Basic Input/Output System) to powszechna nazwa kodu startowego w komputerze. W nowoczesnych komputerach system BIOS został zamieniony systemem <a data-href="UEFI" href="os\software\uefi.html" class="internal-link" target="_self" rel="noopener nofollow">UEFI</a>. Obsługuje ona interakcję wszystkich urządzeń input/output z <a data-tooltip-position="top" aria-label="Procesor CPU" data-href="Procesor CPU" href="os\hardware\procesor-cpu.html" class="internal-link" target="_self" rel="noopener nofollow">procesorem</a>.]]></description><link>os\software\bios.html</link><guid isPermaLink="false">OS/Software/BIOS.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Fri, 27 Dec 2024 12:33:13 GMT</pubDate></item><item><title><![CDATA[Instrukcje programowe]]></title><description><![CDATA[ 
 <br><br>Instrukcje programowe to podstawowe polecenia wykonywane przez procesor komputera w celu realizacji określonego zadania. Instrukcje te są częścią zestawu instrukcji procesora i różnią się w zależności od jego architektury (np. x86, ARM, PowerPC).  Wszystkie instrukcje programowe są napisane w tzw. <a data-tooltip-position="top" aria-label="Asembler" data-href="Asembler" href="programming\ogólne-koncepty\asembler.html" class="internal-link" target="_self" rel="noopener nofollow">asemblerze</a>, czyli najbardzej wysokopoziomowym języku programowania odczytywalnym dla ludzi. Każdy język jest przekształcany w trakcie kompilacji w instrukcje asemblera.<br><br><br>Instrukcja powinna się składać z kilku elementów:<br>
<br>Kod operacji (opcode) - definicja rodzaju operacji do wykonania przez procesor.
<br>Operandy - argumenty danej operacji.
<br>Długośc instrukcji - różni się w zależności od architektury procesora.
<br>Przykładowa instrukcja może wyglądać tak:<br>ADD ECX, 10
<br>Kod ten dodaje natychmiastową wartość 10 do rejestru ECX, gdzie:<br>
<br>ADD - Kod operacji dodania 
<br>ECX, 10 - Operandy (ECX - rejestr docelowy, 10 - wartość dodania)<br>
Ważne do zaznaczenia jest że kolejność wykonywania operand w większości asemblerów odbywa się od prawej do lewej strony.
]]></description><link>programming\assembly\instrukcje-programowe.html</link><guid isPermaLink="false">Programming/Assembly/Instrukcje programowe.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Sat, 28 Dec 2024 12:48:04 GMT</pubDate></item><item><title><![CDATA[Stos]]></title><description><![CDATA[ 
 <br><br>Stos to struktura danych która działa na podstawie LIFO (Last in, first out). Element który został dodany jako ostatnio zostanie usunięty jako pierwszy.<br><br>Push - Dodanie elementu na górę stosu<br>
Pop – Usunięcie elementu z góry stosu.<br>
Peek  – Podejrzenie elementu na górze stosu bez usuwania go.<br>
IsEmpty – Sprawdzenie, czy stos jest pusty.<br><br>Stos wywołań - służy do przechowywania wywołań systemowych.]]></description><link>programming\ogólne-koncepty\stos.html</link><guid isPermaLink="false">Programming/Ogólne koncepty/Stos.md</guid><dc:creator><![CDATA[Mag Magik II]]></dc:creator><pubDate>Sat, 28 Dec 2024 01:57:26 GMT</pubDate></item><item><title><![CDATA[Wyszukiwanie binarne]]></title><description><![CDATA[ 
 <br><br>Wydajność algorytmu: <br>
Wyszukiwanie binarne pozwala na określenie pozycji podanego elementu w posortowanej liście. Lista dzielona jest na pół, po czym sprawdzane jest czy szukany element jest większy lub mniejszy od połowy listy. Jesli jest mniejszy, mniejsza połowa listy jest dzielona na pół i proces jest powtarzany, jeśli jest większy to większa połowa listy podlega temu samemu traktowaniu.<br><br>int? binarySearch()
{
    int start = 0;
    int end = sortedList.Count - 1;
    while (true)
    {
        int mid = (start + end) / 2;
        if (sortedList[mid] == szukanaLiczba)
        {
            return mid;
        }
        else if (szukanaLiczba &gt; sortedList[mid])
        {
            start = mid + 1;
        }
        else if (szukanaLiczba &lt; sortedList[mid])
        {
            start = mid - 1;
        }
        else {
            return null;
        }
 
    }
}
]]></description><link>algorithms\na-listach-posortowanych\wyszukiwanie-binarne.html</link><guid isPermaLink="false">Algorithms/Na listach posortowanych/Wyszukiwanie binarne.md</guid><pubDate>Wed, 25 Dec 2024 20:57:03 GMT</pubDate></item><item><title><![CDATA[Przestrzeń adresowa]]></title><description><![CDATA[ 
 <br><br>Przestrzeń adresowa to zakres adresów, jakie mogą być wykorzystane do identyfikacji lokalizacji w pamięci komputerowej lub innych zasobach. Przechowuje zazwyczaj informacje oraz dane <a data-tooltip-position="top" aria-label="Procesy" data-href="Procesy" href="os\concepts\procesy\procesy.html" class="internal-link" target="_self" rel="noopener nofollow">procesu</a> w <a data-tooltip-position="top" aria-label="Pamięć RAM" data-href="Pamięć RAM" href="os\hardware\pamięć-ram.html" class="internal-link" target="_self" rel="noopener nofollow">pamięci RAM</a>. Pamięć adresowa jednak nie jest równoznaczna z pamięcią fizyczną. Dzięki pamięci wirtualnej, jeżeli proces zarząda więcej pamięci niż jest wystarczająco w pamięci głównej, system operacyjny przekaże część danych do zapisania na <a data-tooltip-position="top" aria-label="Dyski" data-href="Dyski" href="os\hardware\dyski.html" class="internal-link" target="_self" rel="noopener nofollow">dysku</a>. ]]></description><link>os\concepts\procesy\przestrzeń-adresowa.html</link><guid isPermaLink="false">OS/Concepts/Procesy/Przestrzeń adresowa.md</guid><pubDate>Wed, 25 Dec 2024 21:59:55 GMT</pubDate></item><item><title><![CDATA[Tryby wykonywania]]></title><description><![CDATA[ 
 <br>]]></description><link>os\concepts\tryby-wykonywania.html</link><guid isPermaLink="false">OS/Concepts/Tryby wykonywania.md</guid><pubDate>Wed, 25 Dec 2024 00:34:49 GMT</pubDate></item><item><title><![CDATA[Magistrala]]></title><description><![CDATA[ 
 <br><br>Magistrala to element systemu komputerowego który służy do przesyłania danych pomiędzy różnymi komponentami urządzenia. Istnieje wiele rodzajów magistral o różnych prędkościach w zależności od zastosowania, a samo sformułowanie magistrala jest dosyć ogólne. Komputer musi mieć świadomość wszystkich magistral aby móc je kontrolować i sterować przepływem danych.<br>Przykłady magistral to:<br>
<br>Magistrale łączące rdzenie i pamięć podręczną
<br>PCI
<br>PCIe
<br>SATA
<br>USB
<br>Ethernet
<br>Magistrale różnią się również ilością pasm jakie posiadają, wpływa to na liczbę przesyłanych jednocześnie bitów. Ważną różnicą jest również sposób komunikacji:<br>
<br>Architektura współdzielonej magistrali (SBA - shared bus architecture) oznacza, że wiele urządzeń korzysta z tych samych kabli do przesyłania danych.
<br>Architektura równoległej magistrali (PBA - parallel bus architecture) oznacze, że każde słowo danych jest wysyłane za pośrednictwem wielu przewodów.
]]></description><link>os\hardware\magistrala.html</link><guid isPermaLink="false">OS/Hardware/Magistrala.md</guid><pubDate>Wed, 25 Dec 2024 00:32:52 GMT</pubDate></item><item><title><![CDATA[Pamięć CMOS]]></title><description><![CDATA[ 
 <br><br>Pamięć CMOS to pamięć ulotna wykorzystywana w komputerach do przechowywania daty i godziny jak i również często ustawień <a data-tooltip-position="top" aria-label="BIOS" data-href="BIOS" href="os\software\bios.html" class="internal-link" target="_self" rel="noopener nofollow">BIOSu</a>. Pamięć ta jest utrzymywana przy życiu przez baterię, dzięki czemu data i godzina aktualizowane są nawet przy wyłączonym komputerze, a ustawienia nie resetują się przy każdym reboocie.]]></description><link>os\hardware\pamięć-cmos.html</link><guid isPermaLink="false">OS/Hardware/Pamięć CMOS.md</guid><pubDate>Wed, 25 Dec 2024 12:47:23 GMT</pubDate></item><item><title><![CDATA[Pamięć EEPROM]]></title><description><![CDATA[ 
 <br><br>Pamięć EEPROM (electrically erasable PROM) to nieulotny rodzaj pamięci, jednak w odróżnieniu od pamięci <a data-tooltip-position="top" aria-label="Pamięć ROM" data-href="Pamięć ROM" href="os\hardware\pamięć-rom.html" class="internal-link" target="_self" rel="noopener nofollow">ROM</a> można ją kasować i ponownie zapisywać. Używa się jej w przypadkach gdzie może być potrzebne aktualizowanie bądź korygowanie błędółw w kodzie na niej zawartej. Najczęstrzym przypadkiem użytku pamięci EEPROM w nowoczesnych komputerach jesy zapisywanie na nich <a data-tooltip-position="top" aria-label="BIOS" data-href="BIOS" href="os\software\bios.html" class="internal-link" target="_self" rel="noopener nofollow">BIOSu</a> aby móc go w przyszłości aktualizować.]]></description><link>os\hardware\pamięć-eeprom.html</link><guid isPermaLink="false">OS/Hardware/Pamięć EEPROM.md</guid><pubDate>Tue, 24 Dec 2024 23:53:16 GMT</pubDate></item><item><title><![CDATA[Pamięć ROM]]></title><description><![CDATA[ 
 <br><br>Pamięć ROM (read only memory) to nieulotny rodzaj pamięci służący tylko do odczytu. Jest ona programowana przez producenta i nie może być później modyfikowana. Stosowana jest ona zazwyczaj do zamieszczania na komputerach programu ładującego wykorzystywanego do rozruchu, aby użytkownik nie mógł zepsuć podstawowego działania komputera.]]></description><link>os\hardware\pamięć-rom.html</link><guid isPermaLink="false">OS/Hardware/Pamięć ROM.md</guid><pubDate>Tue, 24 Dec 2024 23:50:18 GMT</pubDate></item><item><title><![CDATA[UEFI]]></title><description><![CDATA[ 
 <br><br>UEFI (Unified Extensible Firmware Interface) to kod startowy komputera który jest nowoczesnym zamiennikiem <a data-tooltip-position="top" aria-label="BIOS" data-href="BIOS" href="os\software\bios.html" class="internal-link" target="_self" rel="noopener nofollow">BIOSu</a>. W przeciwieństwie do trybu legacy BIOS kod startowy UEFI jest szybki i wydajny, obsługuje różne architektury i większe rozmiary pamięci masowej (nawet do 8 ZiB).]]></description><link>os\software\uefi.html</link><guid isPermaLink="false">OS/Software/UEFI.md</guid><pubDate>Wed, 25 Dec 2024 21:05:56 GMT</pubDate></item><item><title><![CDATA[System Operacyjny]]></title><description><![CDATA[ 
 <br><br>System operacyjny (OS - Operating System) to oprogramowanie systemowe działające w <a data-tooltip-position="top" aria-label="Tryby wykonywania" data-href="Tryby wykonywania" href="os\concepts\tryby-wykonywania.html" class="internal-link" target="_self" rel="noopener nofollow">trybie jądra</a> (chociaż może mieć części działające w trybie użytkownika), które zarządza sprzętem komputerowym oraz podstawowymi funkcjami programowymi.  Dostarczają programistom apliklacji czytelnego, abstrakcyjnego zbioru zasobów będacych odpowiednikami sprzętu oraz zarządzają tymi zasobami.<br>Wyróżnia się kilka rodzajów systemów operacyjnych:<br>
<br>Systemy komputerów mainframe
<br>Systemy serwerów
<br>Systemy komputerów osobistych
<br>Systemy smartfonów i komputerów podręcznych
<br>Wbudowane systemy operacyjne i IoT (Internet of Things)
<br>Systemy czasu rzeczywistego
<br>Systemy kart elektronicznych
]]></description><link>os\systemy\system-operacyjny.html</link><guid isPermaLink="false">OS/Systemy/System Operacyjny.md</guid><pubDate>Wed, 25 Dec 2024 21:26:39 GMT</pubDate></item><item><title><![CDATA[Obsługa SQL]]></title><description><![CDATA[ 
 <br>]]></description><link>programming\c#\obsługa-sql.html</link><guid isPermaLink="false">Programming/C#/Obsługa SQL.md</guid><pubDate>Wed, 25 Dec 2024 00:59:00 GMT</pubDate></item><item><title><![CDATA[Asembler]]></title><description><![CDATA[ 
 <br><br>Program tworzący kod maszynowy na podstawie kodu źródłowego.]]></description><link>programming\ogólne-koncepty\asembler.html</link><guid isPermaLink="false">Programming/Ogólne koncepty/Asembler.md</guid><pubDate>Wed, 25 Dec 2024 21:01:44 GMT</pubDate></item></channel></rss>